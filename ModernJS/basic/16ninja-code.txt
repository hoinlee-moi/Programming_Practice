※닌자 코드※
따라하지 않기!


01. 코드 짧게 쓰기

가능한 한 코드를 짧게 써서, 얼마나 똑똑한 사람인지 보여주기!
지엽적인 문법 지식 등을 총 동원하면 코드 양을 획기적으로 줄일 수 있다!
조건부 연산자 '?'를 사용한 예시를 보자

i = i ? i < 0 ? Math.max(0, len + i) : i : 0;

이렇게 코드를 작성해 놓으면 코드를 접하는 다른 개발자는 아주 즐거운 시간을 보낸다.
i가 나타내는 게 뭔지 파악하는데 꽤 많은 시간을 소모하고, 결국엔 답을 찾지 못해 우리에게 올 것임


02. 글자 하나만 사용하기

글자 하나만 사용해서 변수 이름을 짓자. a,b,c처럼

03. 약어 사용하기

팀에 한 글자 짜리 변수나 모호한 변수명을 사용하지 못하게 하는 제약이 있다면 약어를 쓰는 기지를 발휘하자

ex)
- list : lst
- userAgent : ua 
- borwser : brsr 
- 등등

모든 걸 줄여서 당신의 코드를 읽을 가치가 있는 직감이 뛰어난 개발자만 유지보수를 담당할 수 있게 하자!


04. 포괄적인 명사 사용하기

무언가를 명명할 땐 obj,data,value,item,elem 같이 다양한 개념을 포괄할 수 있는 명사를 사용하자

- data는 가장 이상적인 변수명. 가능한 모든 곳에서 이 변수명을 사용하자 변수가 실제로 담고 있는 건 데이터니까
하지만 변수명 data가 이미 선점된 상황이라면 value를 사용하자. 이 단어 역시 추상도가 높아서 많은 개념을 포함할 수 있다.

- str,num과 같이 자료형과 연관된 변수명을 사용하자
이렇게 변수명을 만들면 유추하기 힘들어진다.

- 새로운 변수명이 더는 떠오르지 않는다면 data1, item2, elem 5 처럼 옆에 숫자를 붙여주자


04. 철자가 유사한 단어 사용하기

여러가지 방법이 있는데 그중 하나는 date와 data같이 유사한 철자를 가진 단어를 조합해 사용하는 것!

05. 동의어 사용하기

유사한 뜻을 가진 단어 여러 개를 같은걸 명명하는 데 사용해서 당신의 풍부한 어휘력을 은연중에 드러내보자!

06. 이름 재사용하기

변수 선언은 정말 필요한 경우에만 하자. 새로운 값을 저장할 때 내부 변수를 선언하지 않고, 매개변수에서 넘어온 값만 사용하자.


07. 재미로 언더스코어 사용하기

_name 이나 __value 처럼 변수명 앞에 _나 __(언더 스코어, 밑줄 표시)을 붙이시다.
 
08. 과장 형용사 사용하기

superElement, megaFrame, niceItem 처럼 개체 앞에 적절한 형용사를 붙여 해당 개체가 얼마나 멋진지 알려주자

09.외부 변수 덮어쓰기

변수 이름을 짓는데 골머리를 썩이지 말고, 함수 내부와 외부에 동일한 이름을 가진 변수를 선언해 사용하자.

let user = authenticateUser();

function render() {
  let user = anotherValue();
  ...
  ...함수 길이가 긺...
  ...
  ... // <-- 개발자는 user와 관련된 이 부분의 코드를 수정해야 함
  ...
}


10. 부작용이 있는 코드 작성하기

isReady(), checkPermission(), findTags() 같은 함수들은 단순 확인용으로 사용되고 외부의 무언가를 바꾸진 않습니다.
이런 함수에 본래 기능을 넘어선 "유용한"기능을 더해주자
예상치 않은 결과를 반환하는 것도 한 방법!

11.함수에 다양한 기능 넣기

함수기능을 확장하자! 함수가 할 수 있는 동작을 함수 이름에 한정짓지 말자

